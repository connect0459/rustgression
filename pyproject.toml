[project]
name = "rustgression"
version = "0.4.1"
description = "Fast OLS and TLS regression using Rust backend"
authors = [{ name = "connect0459", email = "connect0459@gmail.com" }]
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Rust",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
dependencies = ["numpy>=1.20.0"]

# `uv sync --extra examples`でインストールされる依存関係
[project.optional-dependencies]
examples = ["matplotlib>=3.10.1", "scipy>=1.15.2"]

[project.urls]
"Homepage" = "https://github.com/connect0459/rustgression"
"Bug Tracker" = "https://github.com/connect0459/rustgression/issues"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "."
features = ["pyo3/extension-module"]
bindings = "pyo3"
# Ensures PyPI compatibility by repairing wheels for the linux_x86_64 platform tag issue.
auditwheel = "repair"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"

[tool.ruff]
# 行の長さ制限
line-length = 88

# 検査するファイルやディレクトリ
src = ["rustgression", "tests"]

# 無視するファイルやディレクトリ
exclude = [".git", ".venv", "__pycache__", "build", "dist"]

# 有効にするルール
[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "RUF", # ruff-specific rules
]

# 無視するルール
ignore = [
  "E501",   # line length violations
  "RUF003", # allow "KATAKANA LETTER"
]

# 自動修正の対象とするルール
fixable = ["I", "F401", "RUF002", "RUF022", "UP006", "UP007", "UP035"]

[tool.ruff.lint.isort]
# isortの設定
known-first-party = ["rustgression"]
known-third-party = ["numpy", "pandas"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.mccabe]
# 循環的複雑度の最大値
max-complexity = 10

[tool.ruff.lint.pydocstyle]
# docstringのスタイル
convention = "numpy"

[tool.uv]
managed = true

[dependency-groups]
dev = [
  "maturin==1.9.4",
  "packaging==25.0",
  "pre-commit==4.3.0",
  "pytest==8.4.2",
  "pytest-cov==7.0.0",
  "ruff==0.13.1",
  "setuptools==80.9.0",
  "twine==6.2.0",
]
