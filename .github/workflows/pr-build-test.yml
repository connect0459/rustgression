name: PR Build Test

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # 手動実行も可能にする

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # 1つの環境が失敗しても他の環境のテストを続行
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # maturinを使用してホイールをビルド
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: auto
          args: --release --strip
          manylinux: auto
          container: off

      # ビルドされたホイールをインストールしてテスト
      - name: Install built wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          wheel_path=$(find target/wheels -name "*.whl" | head -n 1)
          python -m pip install $wheel_path

      # パッケージのインポートテスト
      - name: Test import
        run: |
          python -c "import rustgression; print(f'Successfully imported rustgression {rustgression.__version__}')"

      # もしテストがある場合は実行
      - name: Run tests
        run: |
          python -m pytest

      # ビルド成果物をアップロード（確認用）
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl
          retention-days: 7
